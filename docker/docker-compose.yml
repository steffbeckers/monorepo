name: steffbeckers

services:
  api:
    depends_on:
      - db-migrator
    image: steffbeckers/api
    build:
      context: ../dotnet
      dockerfile: ../dotnet/src/SteffBeckers.HttpApi.Host/Dockerfile.dev
    develop:
      watch:
        - action: sync
          path: ../dotnet
          target: /app
          ignore:
            - node_modules/
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    container_name: steffbeckers_api
    command: dotnet watch run --project src/SteffBeckers.HttpApi.Host/SteffBeckers.HttpApi.Host.csproj --urls http://*:8080
    restart: always
    networks:
      - steffbeckers
  crm:
    image: steffbeckers/crm
    build:
      context: ../angular
      dockerfile: ../angular/apps/crm/Dockerfile.dev
    develop:
      watch:
        - action: sync
          path: ../angular
          target: /app
          ignore:
            - .angular/
            - .nx/
            - dist/
            - node_modules/
        - action: rebuild
          path: ../angular/package.json
        - action: rebuild
          path: ../angular/nx.json
        - action: rebuild
          path: ../angular/tsconfig.base.json
    container_name: steffbeckers_crm
    command: yarn nx serve crm
    restart: always
    networks:
      - steffbeckers
  db-migrator:
    depends_on:
      - mssql
    image: steffbeckers/db-migrator
    build:
      context: ../dotnet
      dockerfile: ../dotnet/src/SteffBeckers.DbMigrator/Dockerfile.dev
    environment:
      - DOTNET_ENVIRONMENT=Development
    container_name: steffbeckers_db-migrator
    command: dotnet run --project src/SteffBeckers.DbMigrator/SteffBeckers.DbMigrator.csproj
    restart: "no"
    networks:
      - steffbeckers
  mailhog:
    image: mailhog/mailhog
    container_name: steffbeckers_mailhog
    restart: always
    logging:
      driver: none
    networks:
      - steffbeckers
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: steffbeckers_mssql
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pass@word
    volumes:
      - ./mssql/var/opt/mssql/data:/var/opt/mssql/data
    networks:
      - steffbeckers
  nginx:
    image: nginx
    container_name: steffbeckers_nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/etc/nginx/api.conf:/etc/nginx/api.conf:ro
      - ./nginx/etc/nginx/common.conf:/etc/nginx/common.conf:ro
      - ./nginx/etc/nginx/common_location.conf:/etc/nginx/common_location.conf:ro
      - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/etc/nginx/ssl.conf:/etc/nginx/ssl.conf:ro
      - ./nginx/etc/ssl/certs/steffbeckers.local.crt:/etc/ssl/certs/steffbeckers.local.crt:ro
      - ./nginx/etc/ssl/private/steffbeckers.local.key:/etc/ssl/private/steffbeckers.local.key:ro
      - ./nginx/var/www/html:/var/www/html
    networks:
      - steffbeckers
  rabbitmq:
    image: rabbitmq:management
    container_name: steffbeckers_rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=steff
      - RABBITMQ_DEFAULT_PASS=Pqdky8ozQBww7tqyi!hM
    networks:
      - steffbeckers
  redis:
    image: redis
    container_name: steffbeckers_redis
    restart: always
    networks:
      - steffbeckers
  redis-commander:
    image: rediscommander/redis-commander
    container_name: steffbeckers_redis-commander
    hostname: redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - steffbeckers

networks:
  steffbeckers:
    name: steffbeckers
