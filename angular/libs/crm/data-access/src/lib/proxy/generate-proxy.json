{
  "generated": ["crm"],
  "modules": {
    "abp": {
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "actions": {
            "FindTenantByIdAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService",
              "name": "FindTenantByIdAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "supportedVersions": [],
              "uniqueName": "FindTenantByIdAsyncById",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}"
            },
            "FindTenantByNameAsyncByName": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService",
              "name": "FindTenantByNameAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "name",
                  "nameOnMethod": "name",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "name",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "supportedVersions": [],
              "uniqueName": "FindTenantByNameAsyncByName",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "AbpTenant",
          "controllerName": "AbpTenant",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "FindTenantByNameAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "name",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
                  }
                },
                {
                  "name": "FindTenantByIdAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
                  }
                }
              ],
              "name": "IAbpTenantAppService",
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Pages.Abp.MultiTenancy.AbpTenantController"
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "actions": {
            "GetByModel": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
              "name": "Get",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "model",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "IncludeTypes",
                  "nameOnMethod": "model",
                  "type": "System.Boolean",
                  "typeSimple": "boolean"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "model",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              },
              "supportedVersions": [],
              "uniqueName": "GetByModel",
              "url": "api/abp/api-definition"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "AbpApiDefinition",
          "controllerName": "AbpApiDefinition",
          "interfaces": [],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController"
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "actions": {
            "GetAsyncByOptions": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "options",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "IncludeLocalizationResources",
                  "nameOnMethod": "options",
                  "type": "System.Boolean",
                  "typeSimple": "boolean"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "options",
                  "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                  "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions, Volo.Abp.AspNetCore.Mvc.Contracts",
                  "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncByOptions",
              "url": "api/abp/application-configuration"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "AbpApplicationConfiguration",
          "controllerName": "AbpApplicationConfiguration",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "options",
                      "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                      "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions, Volo.Abp.AspNetCore.Mvc.Contracts",
                      "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
                  }
                }
              ],
              "name": "IAbpApplicationConfigurationAppService",
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController"
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController": {
          "actions": {
            "GetAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationLocalizationAppService",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "CultureName",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "OnlyDynamics",
                  "nameOnMethod": "input",
                  "type": "System.Boolean",
                  "typeSimple": "boolean"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                  "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto, Volo.Abp.AspNetCore.Mvc.Contracts",
                  "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncByInput",
              "url": "api/abp/application-localization"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "AbpApplicationLocalization",
          "controllerName": "AbpApplicationLocalization",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                      "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto, Volo.Abp.AspNetCore.Mvc.Contracts",
                      "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"
                  }
                }
              ],
              "name": "IAbpApplicationLocalizationAppService",
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationLocalizationAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController"
        }
      },
      "remoteServiceName": "abp",
      "rootPath": "abp"
    },
    "account": {
      "controllers": {
        "Volo.Abp.Account.AccountController": {
          "actions": {
            "RegisterAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.IAccountAppService",
              "name": "RegisterAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "typeSimple": "Volo.Abp.Account.RegisterDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "supportedVersions": [],
              "uniqueName": "RegisterAsyncByInput",
              "url": "api/account/register"
            },
            "ResetPasswordAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.IAccountAppService",
              "name": "ResetPasswordAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "ResetPasswordAsyncByInput",
              "url": "api/account/reset-password"
            },
            "SendPasswordResetCodeAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.IAccountAppService",
              "name": "SendPasswordResetCodeAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "url": "api/account/send-password-reset-code"
            },
            "VerifyPasswordResetTokenAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.IAccountAppService",
              "name": "VerifyPasswordResetTokenAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "typeAsString": "Volo.Abp.Account.VerifyPasswordResetTokenInput, Volo.Abp.Account.Application.Contracts",
                  "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput"
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "supportedVersions": [],
              "uniqueName": "VerifyPasswordResetTokenAsyncByInput",
              "url": "api/account/verify-password-reset-token"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Account",
          "controllerName": "Account",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "RegisterAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Account.RegisterDto",
                      "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                      "typeSimple": "Volo.Abp.Account.RegisterDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "SendPasswordResetCodeAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                      "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                      "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "VerifyPasswordResetTokenAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                      "typeAsString": "Volo.Abp.Account.VerifyPasswordResetTokenInput, Volo.Abp.Account.Application.Contracts",
                      "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "ResetPasswordAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Account.ResetPasswordDto",
                      "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                      "typeSimple": "Volo.Abp.Account.ResetPasswordDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IAccountAppService",
              "type": "Volo.Abp.Account.IAccountAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Account.AccountController"
        },
        "Volo.Abp.Account.DynamicClaimsController": {
          "actions": {
            "RefreshAsync": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.IDynamicClaimsAppService",
              "name": "RefreshAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "RefreshAsync",
              "url": "api/account/dynamic-claims/refresh"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "DynamicClaims",
          "controllerName": "DynamicClaims",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "RefreshAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IDynamicClaimsAppService",
              "type": "Volo.Abp.Account.IDynamicClaimsAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Account.DynamicClaimsController"
        },
        "Volo.Abp.Account.ProfileController": {
          "actions": {
            "ChangePasswordAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.IProfileAppService",
              "name": "ChangePasswordAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Account.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Account.ChangePasswordInput"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Account.ChangePasswordInput",
                  "typeAsString": "Volo.Abp.Account.ChangePasswordInput, Volo.Abp.Account.Application.Contracts",
                  "typeSimple": "Volo.Abp.Account.ChangePasswordInput"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "ChangePasswordAsyncByInput",
              "url": "api/account/my-profile/change-password"
            },
            "GetAsync": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Account.IProfileAppService",
              "name": "GetAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "Volo.Abp.Account.ProfileDto",
                "typeSimple": "Volo.Abp.Account.ProfileDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsync",
              "url": "api/account/my-profile"
            },
            "UpdateAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.Account.IProfileAppService",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Account.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Account.UpdateProfileDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Account.UpdateProfileDto",
                  "typeAsString": "Volo.Abp.Account.UpdateProfileDto, Volo.Abp.Account.Application.Contracts",
                  "typeSimple": "Volo.Abp.Account.UpdateProfileDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.ProfileDto",
                "typeSimple": "Volo.Abp.Account.ProfileDto"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByInput",
              "url": "api/account/my-profile"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Profile",
          "controllerName": "Profile",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Account.ProfileDto",
                    "typeSimple": "Volo.Abp.Account.ProfileDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Account.UpdateProfileDto",
                      "typeAsString": "Volo.Abp.Account.UpdateProfileDto, Volo.Abp.Account.Application.Contracts",
                      "typeSimple": "Volo.Abp.Account.UpdateProfileDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Account.ProfileDto",
                    "typeSimple": "Volo.Abp.Account.ProfileDto"
                  }
                },
                {
                  "name": "ChangePasswordAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Account.ChangePasswordInput",
                      "typeAsString": "Volo.Abp.Account.ChangePasswordInput, Volo.Abp.Account.Application.Contracts",
                      "typeSimple": "Volo.Abp.Account.ChangePasswordInput"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IProfileAppService",
              "type": "Volo.Abp.Account.IProfileAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Account.ProfileController"
        },
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "actions": {
            "CheckPasswordByLogin": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
              "name": "CheckPassword",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "login",
                  "nameOnMethod": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "supportedVersions": [],
              "uniqueName": "CheckPasswordByLogin",
              "url": "api/account/check-password"
            },
            "LoginByLogin": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
              "name": "Login",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "login",
                  "nameOnMethod": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "supportedVersions": [],
              "uniqueName": "LoginByLogin",
              "url": "api/account/login"
            },
            "Logout": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
              "name": "Logout",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "Logout",
              "url": "api/account/logout"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Login",
          "controllerName": "Account",
          "interfaces": [],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
        }
      },
      "remoteServiceName": "AbpAccount",
      "rootPath": "account"
    },
    "crm": {
      "controllers": {
        "SteffBeckers.CRM.Companies.CompaniesController": {
          "actions": {
            "GetListAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "SteffBeckers.CRM.Companies.ICompaniesAppService",
              "name": "GetListAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Query",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Sorting",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "SkipCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "MaxResultCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "SteffBeckers.CRM.Companies.CompanyListInputDto",
                  "typeAsString": "SteffBeckers.CRM.Companies.CompanyListInputDto, SteffBeckers.CRM.Application.Contracts",
                  "typeSimple": "SteffBeckers.CRM.Companies.CompanyListInputDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<SteffBeckers.CRM.Companies.CompanyListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<SteffBeckers.CRM.Companies.CompanyListDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetListAsyncByInput",
              "url": "api/crm/companies"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "CRM - Companies",
          "controllerName": "Companies",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "SteffBeckers.CRM.Companies.CompanyListInputDto",
                      "typeAsString": "SteffBeckers.CRM.Companies.CompanyListInputDto, SteffBeckers.CRM.Application.Contracts",
                      "typeSimple": "SteffBeckers.CRM.Companies.CompanyListInputDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<SteffBeckers.CRM.Companies.CompanyListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<SteffBeckers.CRM.Companies.CompanyListDto>"
                  }
                }
              ],
              "name": "ICompaniesAppService",
              "type": "SteffBeckers.CRM.Companies.ICompaniesAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "SteffBeckers.CRM.Companies.CompaniesController"
        }
      },
      "remoteServiceName": "CRM",
      "rootPath": "crm"
    },
    "featureManagement": {
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "actions": {
            "DeleteAsyncByProviderNameAndProviderKey": {
              "allowAnonymous": null,
              "httpMethod": "DELETE",
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService",
              "name": "DeleteAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerName",
                  "nameOnMethod": "providerName",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerKey",
                  "nameOnMethod": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerKey",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "DeleteAsyncByProviderNameAndProviderKey",
              "url": "api/feature-management/features"
            },
            "GetAsyncByProviderNameAndProviderKey": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerName",
                  "nameOnMethod": "providerName",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerKey",
                  "nameOnMethod": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerKey",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "url": "api/feature-management/features"
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerName",
                  "nameOnMethod": "providerName",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerKey",
                  "nameOnMethod": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerKey",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "url": "api/feature-management/features"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Features",
          "controllerName": "Features",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerKey",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                    "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerKey",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                      "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerKey",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IFeatureAppService",
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.FeatureManagement.FeaturesController"
        }
      },
      "remoteServiceName": "AbpFeatureManagement",
      "rootPath": "featureManagement"
    },
    "identity": {
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "actions": {
            "CreateAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleCreateDto>",
              "name": "CreateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "supportedVersions": [],
              "uniqueName": "CreateAsyncByInput",
              "url": "api/identity/roles"
            },
            "DeleteAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "DELETE",
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>",
              "name": "DeleteAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "DeleteAsyncById",
              "url": "api/identity/roles/{id}"
            },
            "GetAllListAsync": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityRoleAppService",
              "name": "GetAllListAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetAllListAsync",
              "url": "api/identity/roles/all"
            },
            "GetAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.GetIdentityRolesInput>",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncById",
              "url": "api/identity/roles/{id}"
            },
            "GetListAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.GetIdentityRolesInput>",
              "name": "GetListAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Filter",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Sorting",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "SkipCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "MaxResultCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetListAsyncByInput",
              "url": "api/identity/roles"
            },
            "UpdateAsyncByIdAndInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.IdentityRoleUpdateDto>",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByIdAndInput",
              "url": "api/identity/roles/{id}"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Role",
          "controllerName": "IdentityRole",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAllListAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                      "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                      "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                      "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IIdentityRoleAppService",
              "type": "Volo.Abp.Identity.IIdentityRoleAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Identity.IdentityRoleController"
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "actions": {
            "CreateAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserCreateDto>",
              "name": "CreateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "supportedVersions": [],
              "uniqueName": "CreateAsyncByInput",
              "url": "api/identity/users"
            },
            "DeleteAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "DELETE",
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>",
              "name": "DeleteAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "DeleteAsyncById",
              "url": "api/identity/users/{id}"
            },
            "FindByEmailAsyncByEmail": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "FindByEmailAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "email",
                  "nameOnMethod": "email",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "email",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "supportedVersions": [],
              "uniqueName": "FindByEmailAsyncByEmail",
              "url": "api/identity/users/by-email/{email}"
            },
            "FindByUsernameAsyncByUserName": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "FindByUsernameAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "userName",
                  "nameOnMethod": "userName",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "userName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "supportedVersions": [],
              "uniqueName": "FindByUsernameAsyncByUserName",
              "url": "api/identity/users/by-username/{userName}"
            },
            "GetAssignableRolesAsync": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "GetAssignableRolesAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetAssignableRolesAsync",
              "url": "api/identity/users/assignable-roles"
            },
            "GetAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.GetIdentityUsersInput>",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncById",
              "url": "api/identity/users/{id}"
            },
            "GetListAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.GetIdentityUsersInput>",
              "name": "GetListAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Filter",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Sorting",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "SkipCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "MaxResultCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetListAsyncByInput",
              "url": "api/identity/users"
            },
            "GetRolesAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "GetRolesAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetRolesAsyncById",
              "url": "api/identity/users/{id}/roles"
            },
            "UpdateAsyncByIdAndInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.IdentityUserUpdateDto>",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByIdAndInput",
              "url": "api/identity/users/{id}"
            },
            "UpdateRolesAsyncByIdAndInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "UpdateRolesAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "url": "api/identity/users/{id}/roles"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "User",
          "controllerName": "IdentityUser",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetRolesAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "GetAssignableRolesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "UpdateRolesAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "FindByUsernameAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "userName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "FindByEmailAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "email",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                      "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IIdentityUserAppService",
              "type": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Identity.IdentityUserController"
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "actions": {
            "FindByIdAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService",
              "name": "FindByIdAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "supportedVersions": [],
              "uniqueName": "FindByIdAsyncById",
              "url": "api/identity/users/lookup/{id}"
            },
            "FindByUserNameAsyncByUserName": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService",
              "name": "FindByUserNameAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "userName",
                  "nameOnMethod": "userName",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "userName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "supportedVersions": [],
              "uniqueName": "FindByUserNameAsyncByUserName",
              "url": "api/identity/users/lookup/by-username/{userName}"
            },
            "GetCountAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService",
              "name": "GetCountAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Filter",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              },
              "supportedVersions": [],
              "uniqueName": "GetCountAsyncByInput",
              "url": "api/identity/users/lookup/count"
            },
            "SearchAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService",
              "name": "SearchAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Filter",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Sorting",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "SkipCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "MaxResultCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              },
              "supportedVersions": [],
              "uniqueName": "SearchAsyncByInput",
              "url": "api/identity/users/lookup/search"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "UserLookup",
          "controllerName": "IdentityUserLookup",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "FindByIdAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Users.UserData",
                    "typeSimple": "Volo.Abp.Users.UserData"
                  }
                },
                {
                  "name": "FindByUserNameAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "userName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Users.UserData",
                    "typeSimple": "Volo.Abp.Users.UserData"
                  }
                },
                {
                  "name": "SearchAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                      "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
                  }
                },
                {
                  "name": "GetCountAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                      "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                      "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Int64",
                    "typeSimple": "number"
                  }
                }
              ],
              "name": "IIdentityUserLookupAppService",
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.Identity.IdentityUserLookupController"
        }
      },
      "remoteServiceName": "AbpIdentity",
      "rootPath": "identity"
    },
    "multi-tenancy": {
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "actions": {
            "CreateAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantCreateDto>",
              "name": "CreateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "supportedVersions": [],
              "uniqueName": "CreateAsyncByInput",
              "url": "api/multi-tenancy/tenants"
            },
            "DeleteAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "DELETE",
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>",
              "name": "DeleteAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "DeleteAsyncById",
              "url": "api/multi-tenancy/tenants/{id}"
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "DELETE",
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService",
              "name": "DeleteDefaultConnectionStringAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string"
            },
            "GetAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.GetTenantsInput>",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncById",
              "url": "api/multi-tenancy/tenants/{id}"
            },
            "GetDefaultConnectionStringAsyncById": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService",
              "name": "GetDefaultConnectionStringAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "supportedVersions": [],
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string"
            },
            "GetListAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.GetTenantsInput>",
              "name": "GetListAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Filter",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "Sorting",
                  "nameOnMethod": "input",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "SkipCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "input",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "MaxResultCount",
                  "nameOnMethod": "input",
                  "type": "System.Int32",
                  "typeSimple": "number"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              },
              "supportedVersions": [],
              "uniqueName": "GetListAsyncByInput",
              "url": "api/multi-tenancy/tenants"
            },
            "UpdateAsyncByIdAndInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.TenantUpdateDto>",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByIdAndInput",
              "url": "api/multi-tenancy/tenants/{id}"
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService",
              "name": "UpdateDefaultConnectionStringAsync",
              "parameters": [
                {
                  "bindingSourceId": "Path",
                  "constraintTypes": [],
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "id",
                  "nameOnMethod": "id",
                  "type": "System.Guid",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "defaultConnectionString",
                  "nameOnMethod": "defaultConnectionString",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "id",
                  "type": "System.Guid",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "defaultConnectionString",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Tenant",
          "controllerName": "Tenant",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                },
                {
                  "name": "UpdateDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "defaultConnectionString",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                      "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                      "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                      "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "id",
                      "type": "System.Guid",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "ITenantAppService",
              "type": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.TenantManagement.TenantController"
        }
      },
      "remoteServiceName": "AbpTenantManagement",
      "rootPath": "multi-tenancy"
    },
    "permissionManagement": {
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService",
              "name": "GetAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerName",
                  "nameOnMethod": "providerName",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerKey",
                  "nameOnMethod": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerKey",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "url": "api/permission-management/permissions"
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "allowAnonymous": null,
              "httpMethod": "PUT",
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerName",
                  "nameOnMethod": "providerName",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "providerKey",
                  "nameOnMethod": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string"
                },
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerName",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "providerKey",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                },
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "url": "api/permission-management/permissions"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "Permissions",
          "controllerName": "Permissions",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerKey",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                    "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerName",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "providerKey",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    },
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                      "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IPermissionAppService",
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.PermissionManagement.PermissionsController"
        }
      },
      "remoteServiceName": "AbpPermissionManagement",
      "rootPath": "permissionManagement"
    },
    "settingManagement": {
      "controllers": {
        "Volo.Abp.SettingManagement.EmailSettingsController": {
          "actions": {
            "GetAsync": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService",
              "name": "GetAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsync",
              "url": "api/setting-management/emailing"
            },
            "SendTestEmailAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService",
              "name": "SendTestEmailAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "typeAsString": "Volo.Abp.SettingManagement.SendTestEmailInput, Volo.Abp.SettingManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "SendTestEmailAsyncByInput",
              "url": "api/setting-management/emailing/send-test-email"
            },
            "UpdateAsyncByInput": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "Body",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "input",
                  "nameOnMethod": "input",
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "input",
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByInput",
              "url": "api/setting-management/emailing"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "EmailSettings",
          "controllerName": "EmailSettings",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                    "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                      "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "SendTestEmailAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "input",
                      "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                      "typeAsString": "Volo.Abp.SettingManagement.SendTestEmailInput, Volo.Abp.SettingManagement.Application.Contracts",
                      "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "IEmailSettingsAppService",
              "type": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.SettingManagement.EmailSettingsController"
        },
        "Volo.Abp.SettingManagement.TimeZoneSettingsController": {
          "actions": {
            "GetAsync": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService",
              "name": "GetAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "supportedVersions": [],
              "uniqueName": "GetAsync",
              "url": "api/setting-management/timezone"
            },
            "GetTimezonesAsync": {
              "allowAnonymous": null,
              "httpMethod": "GET",
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService",
              "name": "GetTimezonesAsync",
              "parameters": [],
              "parametersOnMethod": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Volo.Abp.NameValue>",
                "typeSimple": "[Volo.Abp.NameValue]"
              },
              "supportedVersions": [],
              "uniqueName": "GetTimezonesAsync",
              "url": "api/setting-management/timezone/timezones"
            },
            "UpdateAsyncByTimezone": {
              "allowAnonymous": null,
              "httpMethod": "POST",
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService",
              "name": "UpdateAsync",
              "parameters": [
                {
                  "bindingSourceId": "ModelBinding",
                  "constraintTypes": null,
                  "defaultValue": null,
                  "descriptorName": "",
                  "isOptional": false,
                  "jsonName": null,
                  "name": "timezone",
                  "nameOnMethod": "timezone",
                  "type": "System.String",
                  "typeSimple": "string"
                }
              ],
              "parametersOnMethod": [
                {
                  "defaultValue": null,
                  "isOptional": false,
                  "name": "timezone",
                  "type": "System.String",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "typeSimple": "string"
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "supportedVersions": [],
              "uniqueName": "UpdateAsyncByTimezone",
              "url": "api/setting-management/timezone"
            }
          },
          "apiVersion": null,
          "controllerGroupName": "TimeZoneSettings",
          "controllerName": "TimeZoneSettings",
          "interfaces": [
            {
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                },
                {
                  "name": "GetTimezonesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Volo.Abp.NameValue>",
                    "typeSimple": "[Volo.Abp.NameValue]"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "defaultValue": null,
                      "isOptional": false,
                      "name": "timezone",
                      "type": "System.String",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "typeSimple": "string"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ],
              "name": "ITimeZoneSettingsAppService",
              "type": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            }
          ],
          "isIntegrationService": false,
          "isRemoteService": true,
          "type": "Volo.Abp.SettingManagement.TimeZoneSettingsController"
        }
      },
      "remoteServiceName": "SettingManagement",
      "rootPath": "settingManagement"
    }
  },
  "types": {
    "SteffBeckers.CRM.Companies.CompanyListDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "SteffBeckers.CRM.Companies.CompanyListInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Query",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.ChangePasswordInput": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 128,
          "minimum": null,
          "minLength": 0,
          "name": "CurrentPassword",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 128,
          "minimum": null,
          "minLength": 0,
          "name": "NewPassword",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.ProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Surname",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumber",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsExternal",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "HasPassword",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.RegisterDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "EmailAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 128,
          "minimum": null,
          "minLength": 0,
          "name": "Password",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "AppName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.ResetPasswordDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UserId",
          "regex": null,
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ResetToken",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Password",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.SendPasswordResetCodeDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "AppName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ReturnUrl",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ReturnUrlHash",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.UpdateProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 64,
          "minimum": null,
          "minLength": 0,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 64,
          "minimum": null,
          "minLength": 0,
          "name": "Surname",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 16,
          "minimum": null,
          "minLength": 0,
          "name": "PhoneNumber",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.VerifyPasswordResetTokenInput": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UserId",
          "regex": null,
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ResetToken",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Result",
          "regex": null,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Description",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType": {
      "baseType": "System.Enum",
      "enumNames": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "enumValues": [1, 2, 3, 4, 5],
      "genericArguments": null,
      "isEnum": true,
      "properties": null
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 255,
          "minimum": null,
          "minLength": 0,
          "name": "UserNameOrEmailAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 32,
          "minimum": null,
          "minLength": 0,
          "name": "Password",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "RememberMe",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": []
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["TKey"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Id",
          "regex": null,
          "type": "TKey",
          "typeSimple": "TKey"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<TPrimaryKey>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["TPrimaryKey"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LastModificationTime",
          "regex": null,
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LastModifierId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<TPrimaryKey>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["TPrimaryKey"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CreationTime",
          "regex": null,
          "type": "System.DateTime",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CreatorId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto<T0>": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["TKey"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Id",
          "regex": null,
          "type": "TKey",
          "typeSimple": "TKey"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<TPrimaryKey>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["TPrimaryKey"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsDeleted",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DeleterId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DeletionTime",
          "regex": null,
          "type": "System.DateTime?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultMaxResultCount",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "MaxMaxResultCount",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": "2147483647",
          "maxLength": null,
          "minimum": "1",
          "minLength": null,
          "name": "MaxResultCount",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["T"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Items",
          "regex": null,
          "type": "[T]",
          "typeSimple": "[T]"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Sorting",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["T"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TotalCount",
          "regex": null,
          "type": "System.Int64",
          "typeSimple": "number"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": "2147483647",
          "maxLength": null,
          "minimum": "0",
          "minLength": null,
          "name": "SkipCount",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "GrantedPolicies",
          "regex": null,
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Localization",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Auth",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Setting",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CurrentUser",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Features",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "GlobalFeatures",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "MultiTenancy",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CurrentTenant",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Timing",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Clock",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ObjectExtensions",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ExtraProperties",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IncludeLocalizationResources",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Values",
          "regex": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EnabledFeatures",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Values",
          "regex": null,
          "type": "{System.String:System.Collections.Generic.Dictionary<System.String,System.String>}",
          "typeSimple": "{string:System.Collections.Generic.Dictionary<string,string>}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Resources",
          "regex": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Languages",
          "regex": null,
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CurrentCulture",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultResourceName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LanguagesMap",
          "regex": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LanguageFilesMap",
          "regex": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Resources",
          "regex": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CultureName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnlyDynamics",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Texts",
          "regex": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "BaseResources",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Values",
          "regex": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Kind",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EnglishName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ThreeLetterIsoLanguageName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TwoLetterIsoLanguageName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsRightToLeft",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CultureName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "NativeName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DateTimeFormat",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsAuthenticated",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Id",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TenantId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ImpersonatorUserId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ImpersonatorTenantId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ImpersonatorUserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ImpersonatorTenantName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SurName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EmailVerified",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumber",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumberVerified",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Roles",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CalendarAlgorithmType",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DateTimeFormatLong",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ShortDatePattern",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "FullDateTimePattern",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DateSeparator",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ShortTimePattern",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LongTimePattern",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TimeZoneName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Properties",
          "regex": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Configuration",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Fields",
          "regex": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LocalizationResource",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Value",
          "regex": null,
          "type": "System.Object",
          "typeSimple": "object"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsAvailable",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnGet",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnCreate",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnUpdate",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsAvailable",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsAvailable",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeSimple",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Config",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeSimple",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Api",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Ui",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Attributes",
          "regex": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Configuration",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultValue",
          "regex": null,
          "type": "System.Object",
          "typeSimple": "object"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnTable",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnCreateForm",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "OnEditForm",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Lookup",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsVisible",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Url",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ResultListPropertyName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayPropertyName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ValuePropertyName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "FilterParamName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsVisible",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Resource",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Entities",
          "regex": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Configuration",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Modules",
          "regex": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Enums",
          "regex": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Iana",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Windows",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TimeZone",
          "regex": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TimeZoneId",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Id",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsAvailable",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Success",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TenantId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsActive",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsEnabled",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Value",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Provider",
          "regex": null,
          "type": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "typeSimple": "Volo.Abp.FeatureManagement.FeatureProviderDto"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Description",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ValueType",
          "regex": null,
          "type": "Volo.Abp.Validation.StringValues.IStringValueType",
          "typeSimple": "Volo.Abp.Validation.StringValues.IStringValueType"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Depth",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ParentName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Features",
          "regex": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureDto]"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Key",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Groups",
          "regex": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureGroupDto]"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Value",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Features",
          "regex": null,
          "type": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UniqueName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "HttpMethod",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Url",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SupportedVersions",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ParametersOnMethod",
          "regex": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Parameters",
          "regex": null,
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ReturnValue",
          "regex": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "AllowAnonymous",
          "regex": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ImplementFrom",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Modules",
          "regex": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Types",
          "regex": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IncludeTypes",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ControllerName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ControllerGroupName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsRemoteService",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsIntegrationService",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ApiVersion",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Interfaces",
          "regex": null,
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Actions",
          "regex": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Methods",
          "regex": null,
          "type": "[Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel]"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ParametersOnMethod",
          "regex": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ReturnValue",
          "regex": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeAsString",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeSimple",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsOptional",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultValue",
          "regex": null,
          "type": "System.Object",
          "typeSimple": "object"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "RootPath",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "RemoteServiceName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Controllers",
          "regex": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "NameOnMethod",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "JsonName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeSimple",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsOptional",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultValue",
          "regex": null,
          "type": "System.Object",
          "typeSimple": "object"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConstraintTypes",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "BindingSourceId",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DescriptorName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "JsonName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeSimple",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsRequired",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "MinLength",
          "regex": null,
          "type": "System.Int32?",
          "typeSimple": "number?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "MaxLength",
          "regex": null,
          "type": "System.Int32?",
          "typeSimple": "number?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Minimum",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Maximum",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Regex",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Type",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TypeSimple",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "BaseType",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsEnum",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EnumNames",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EnumValues",
          "regex": null,
          "type": "[System.Object]",
          "typeSimple": "[object]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "GenericArguments",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Properties",
          "regex": null,
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]"
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityRolesInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Filter",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityUsersInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Filter",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsDefault",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsPublic",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsDefault",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsStatic",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsPublic",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 128,
          "minimum": null,
          "minLength": 0,
          "name": "Password",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 64,
          "minimum": null,
          "minLength": 0,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 64,
          "minimum": null,
          "minLength": 0,
          "name": "Surname",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": 0,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 16,
          "minimum": null,
          "minLength": 0,
          "name": "PhoneNumber",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsActive",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LockoutEnabled",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "RoleNames",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<System.Guid>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TenantId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Surname",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EmailConfirmed",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumber",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumberConfirmed",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsActive",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LockoutEnabled",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "AccessFailedCount",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LockoutEnd",
          "regex": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EntityVersion",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "LastPasswordChangeTime",
          "regex": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 128,
          "minimum": null,
          "minLength": 0,
          "name": "Password",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "RoleNames",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupCountInputDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Filter",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupSearchInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Filter",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "CultureName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UiCultureName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TwoLetterISOLanguageName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "FlagIcon",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": ["T"],
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Value",
          "regex": null,
          "type": "T",
          "typeSimple": "T"
        }
      ]
    },
    "Volo.Abp.ObjectExtending.ExtensibleObject": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ExtraProperties",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EntityDisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Groups",
          "regex": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGroupDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ParentName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsGranted",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "AllowedProviders",
          "regex": null,
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "GrantedProviders",
          "regex": null,
          "type": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.ProviderInfoDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayNameKey",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DisplayNameResource",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Permissions",
          "regex": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ProviderName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ProviderKey",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsGranted",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Permissions",
          "regex": null,
          "type": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]"
        }
      ]
    },
    "Volo.Abp.SettingManagement.EmailSettingsDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpHost",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpPort",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpUserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpPassword",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpDomain",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpEnableSsl",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpUseDefaultCredentials",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultFromAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "DefaultFromDisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.SettingManagement.SendTestEmailInput": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SenderEmailAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TargetEmailAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Subject",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Body",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.SettingManagement.UpdateEmailSettingsDto": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": null,
          "name": "SmtpHost",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": "65535",
          "maxLength": null,
          "minimum": "1",
          "minLength": null,
          "name": "SmtpPort",
          "regex": null,
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 1024,
          "minimum": null,
          "minLength": null,
          "name": "SmtpUserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 1024,
          "minimum": null,
          "minLength": null,
          "name": "SmtpPassword",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": 1024,
          "minimum": null,
          "minLength": null,
          "name": "SmtpDomain",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpEnableSsl",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "SmtpUseDefaultCredentials",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 1024,
          "minimum": null,
          "minLength": null,
          "name": "DefaultFromAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 1024,
          "minimum": null,
          "minLength": null,
          "name": "DefaultFromDisplayName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.GetTenantsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Filter",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 256,
          "minimum": null,
          "minLength": null,
          "name": "AdminEmailAddress",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 128,
          "minimum": null,
          "minLength": null,
          "name": "AdminPassword",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": true,
          "jsonName": null,
          "maximum": null,
          "maxLength": 64,
          "minimum": null,
          "minLength": 0,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantUpdateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ConcurrencyStamp",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Users.UserData": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Id",
          "regex": null,
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "TenantId",
          "regex": null,
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "UserName",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Surname",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "IsActive",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Email",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "EmailConfirmed",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumber",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "PhoneNumberConfirmed",
          "regex": null,
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "ExtraProperties",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Item",
          "regex": null,
          "type": "System.Object",
          "typeSimple": "object"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Properties",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Validator",
          "regex": null,
          "type": "Volo.Abp.Validation.StringValues.IValueValidator",
          "typeSimple": "Volo.Abp.Validation.StringValues.IValueValidator"
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      "baseType": null,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "isEnum": false,
      "properties": [
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Name",
          "regex": null,
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Item",
          "regex": null,
          "type": "System.Object",
          "typeSimple": "object"
        },
        {
          "isRequired": false,
          "jsonName": null,
          "maximum": null,
          "maxLength": null,
          "minimum": null,
          "minLength": null,
          "name": "Properties",
          "regex": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    }
  }
}
